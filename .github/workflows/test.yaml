name: test

on:
   workflow_dispatch:
  # push:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Flutter SDK
        uses: actions/cache@v2
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}

      - name: Install Flutter
        run: |
          if [ ! -d "$HOME/.flutter/bin" ]; then
            git clone https://github.com/flutter/flutter.git -b stable $HOME/.flutter
          fi
          echo "$HOME/.flutter/bin" >> $GITHUB_PATH
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with: 
          flutter-version: '3.24.4'
     
      - name: Cache Pub Packages
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.yaml') }}    

      - name: Flutter pub get
        run: flutter pub get

      - name: Build APKs
        run: |
          flutter build apk --split-per-abi
      
      # - name: Upload app-armeabi-v7a-release.apk to Firebase App Distribution
      #     uses: wzieba/Firebase-Distribution-Github-Action@v1
      #     with:
      #       appId: ${{ secrets.FIREBASE_APP_ID }}
      #       serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #       groups: app-armeabi-v7a-release.apk                           
      #       file: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
      #       releaseNotes: "app-armeabi-v7a-release.apk"
      #     #! app-profile.apk  
      # - name: Upload app-profile.apk to Firebase App Distribution
      # uses: wzieba/Firebase-Distribution-Github-Action@v1
      # with:
      #   appId: ${{ secrets.FIREBASE_APP_ID }}
      #   serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #   groups: app-profile.apk
      #   file: build/app/outputs/flutter-apk/app-profile.apk
      #   debug: false
      #   releaseNotes: "app-profile.apk"
      # #! app-x86_64-release.apk
      # - name: Upload app-x86_64-release.apk to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{ secrets.FIREBASE_APP_ID }}
      #     serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
      #     groups: app-x86_64-release.apk
      #     file: build/app/outputs/flutter-apk/app-x86_64-release.apk          
      #     releaseNotes: "app-x86_64-release.apk"
          
          






  #   # #! 8. إرسال إشارة لتوزيع النسخ
#   - name: Trigger Distribution Workflow
#     run: |
#      curl -X POST \
#        -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
#        -H "Accept: application/vnd.github.v3+json" \
#        https://api.github.com/repos/${{ github.repository }}/dispatches \
#        -d '{"event_type": "distribute"}'    

# name: Upload to Firebase App Distribution

# on: [push]

# jobs:
#   upload:
#     runs-on: ubuntu-latest
#     steps:
#       #! 1. تفعيل الكاش
#       - name: Checkout code
#         uses: actions/checkout@v1
#       # #!  
#       # - name: Set up Node.js
#       #   uses: actions/setup-node@v3
#       #   with:
#       #     node-version: '18'
#       # #!  
#       # - name: Install Firebase CLI
#       #   run: npm install -g firebase-tools
#       # #!  
#       # - name: Log in to Firebase
#       #   run: echo "${{ secrets.FIREBASE_TOKEN }}" | firebase login:ci --token     
#       #!  
#       # - name: Invite tester to the group
#       #   run: |
#       #     firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
#       #       --app ${{ secrets.FIREBASE_APP_ID }} \
#       #       --groups app-release \
#       #       --app-release heshamkoptan@gmail.com
#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           java-package: jdk
#           architecture: x64
#           check-latest: false
#           server-id: github
#           server-username: GITHUB_ACTOR
#           server-password: GITHUB_TOKEN
#           overwrite-settings: true
#           job-status: success
#       #! 2. تفعيل الكاش لتثبيت الـ Flutter SDK
#       - name: Cache Flutter SDK
#         uses: actions/cache@v2
#         with:
#           path: ~/.flutter
#           key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
#       #! 3. تثبيت Flutter
#       - name: Install Flutter
#         run: |
#           if [ ! -d "$HOME/.flutter/bin" ]; then
#             git clone https://github.com/flutter/flutter.git -b stable $HOME/.flutter
#           fi
#           echo "$HOME/.flutter/bin" >> $GITHUB_PATH