name: test
on:
  push:
    branches:
      - main 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. تفعيل الكاش
      - name: Checkout code
        uses: actions/checkout@v2
      # 2. إعداد JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          
      # 3. تفعيل الكاش لتثبيت Flutter SDK
      - name: Cache Flutter SDK
        uses: actions/cache@v2
        with:
          path: ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
          
      # 4. تثبيت Flutter
      - name: Install Flutter
        run: |
          if [ ! -d "$HOME/.flutter/bin" ]; then
            git clone https://github.com/flutter/flutter.git -b stable $HOME/.flutter
          fi
          echo "$HOME/.flutter/bin" >> $GITHUB_PATH
          
      # 5. إعداد Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with: 
          flutter-version: '3.24.4'
          
      # ** 6. زيادة رقم الإصدار تلقائيًا **
      - name: Increment versionCode and versionName
        id: version
        run: |
          # قراءة الإصدار الحالي من pubspec.yaml
          version=$(grep '^version: ' pubspec.yaml | sed 's/version: //')
          version_name=${version%+*}
          version_code=${version#*+}
          
          # زيادة versionCode تلقائيًا
          new_version_code=$((version_code + 1))
          
          # زيادة versionName (patch)
          major_version=$(echo "$version_name" | cut -d. -f1)
          minor_version=$(echo "$version_name" | cut -d. -f2)
          patch_version=$(echo "$version_name" | cut -d. -f3)
          new_patch_version=$((patch_version + 1))
          new_version_name="${major_version}.${minor_version}.${new_patch_version}"
          
          # تحديث pubspec.yaml بالإصدار الجديد
          sed -i "s/^version: .*/version: ${new_version_name}+${new_version_code}/" pubspec.yaml
          
          # تخزين المتغيرات البيئية للاستخدام في المراحل الأخرى
          echo "versionName=$new_version_name" >> $GITHUB_ENV
          echo "versionCode=$new_version_code" >> $GITHUB_ENV
      # 7. تفعيل الكاش لتثبيت حزم pub
      - name: Cache Pub Packages
        uses: actions/cache@v2
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('pubspec.yaml') }}    
      # 8. تحميل التبعيات
      - name: Flutter pub get
        run: flutter pub get

      # 9. بناء النسخ المتنوعة للتطبيق
      - name: Build APKs
        run: |
          flutter build apk --split-per-abi
      
      # 10. توزيع نسخ التطبيق 
      - name: Upload app-armeabi-v7a-release.apk to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: app-armeabi-v7a-release.apk                           
          file: build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
          releaseNotes: "app-armeabi-v7a-release.apk"
